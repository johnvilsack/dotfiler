#!/usr/bin/env bash
# dotfiler - Main executable

set -euo pipefail

# Determine script directory and lib path
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LIB_DIR="$(dirname "$SCRIPT_DIR")/lib"

# Source library files
source "$LIB_DIR/common.sh"
source "$LIB_DIR/add.sh"
source "$LIB_DIR/link.sh"

# Version and metadata
VERSION="1.0.0"
PROGRAM_NAME="dotfiler"

# Help function
show_help() {
    cat << EOF
$PROGRAM_NAME v$VERSION - Simple dotfiles management

USAGE:
    $PROGRAM_NAME <command> [options]

COMMANDS:
    add, a <file>     Add a file or directory to dotfiles
    link, l           Link all dotfiles to their destinations  
    status, s         Show status of dotfiles
    update            Update $PROGRAM_NAME to latest version
    version           Show version information
    help, -h, --help  Show this help message

EXAMPLES:
    $PROGRAM_NAME add .zshrc
    $PROGRAM_NAME add ~/.config/nvim
    $PROGRAM_NAME link
    $PROGRAM_NAME status

ENVIRONMENT:
    DOTFILESPATH      Path to dotfiles directory (default: ~/.dotfiles)

For more information, visit: https://github.com/yourusername/dotfiler
EOF
}

# Main CLI router
main() {
    # Check for required environment
    check_requirements
    
    # Handle no arguments
    if [[ $# -eq 0 ]]; then
        show_help
        exit 0
    fi
    
    # Parse command
    case "${1:-}" in
        "add"|"a")
            shift
            cmd_add "$@"
            ;;
        "link"|"l")
            cmd_link "$@"
            ;;
        "status"|"s")
            cmd_status "$@"
            ;;
        "update")
            cmd_update "$@"
            ;;
        "version")
            echo "$PROGRAM_NAME v$VERSION"
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            log_error "Unknown command: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# Run main function with all arguments
main "$@"